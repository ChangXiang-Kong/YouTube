<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:ClassModifier="internal">
  <Design.PreviewWith>
    <Border Width="600" Padding="20" Background="{DynamicResource PrimaryBackground}">
      <Grid ColumnDefinitions="*, *">
        <StackPanel Spacing="20">
          <CheckBox />
          <CheckBox IsChecked="True" />
          <CheckBox>Unchecked</CheckBox>
          <CheckBox IsChecked="True">Checked</CheckBox>
          <CheckBox IsChecked="{x:Null}" IsThreeState="True">Indeterminate</CheckBox>
          <CheckBox Width="120">Checkbox should wrap its text</CheckBox>
        </StackPanel>

        <StackPanel Grid.Column="1" Spacing="20">
          <CheckBox IsEnabled="False" />
          <CheckBox IsChecked="True" IsEnabled="False" />
          <CheckBox IsEnabled="False">Unchecked</CheckBox>
          <CheckBox IsChecked="True" IsEnabled="False">Checked</CheckBox>
          <CheckBox IsChecked="{x:Null}" IsEnabled="False" IsThreeState="True">Indeterminate</CheckBox>
          <CheckBox Width="120" IsEnabled="False">Checkbox should wrap its text</CheckBox>
        </StackPanel>
      </Grid>
    </Border>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type CheckBox}" TargetType="CheckBox">
    <Setter Property="Padding" Value="8,0,0,0" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{DynamicResource PrimaryCornerRadius_7}" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
    <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundUnchecked}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid x:Name="RootGrid" ColumnDefinitions="30,*">
          <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent">
            <Border x:Name="NormalRectangle" Width="24" Height="24"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="2"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    UseLayoutRounding="False" />

            <Label x:Name="CheckGlyph" Margin="0,0,0,0" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Content="&#xeba6;"
                   FontFamily="{DynamicResource PhosphorFill}"
                   Foreground="{DynamicResource PrimaryBackground}"
                   Opacity="0" />
          </Grid>
          <ContentPresenter x:Name="PART_ContentPresenter" Grid.Column="1"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}"
                            RecognizesAccessKey="True" TextWrapping="Wrap" />
        </Grid>
      </ControlTemplate>
    </Setter>

    <!--  Unchecked PointerOver State  -->
    <Style Selector="^:pointerover">
      <Style Selector="^ /template/ Border#NormalRectangle">
        <Setter Property="BorderBrush" Value="{DynamicResource HoverGradient}" />
      </Style>
    </Style>

    <!--  Unchecked Pressed State  -->
    <Style Selector="^:pressed">
      <Style Selector="^ /template/ Border#NormalRectangle">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
      </Style>

      <Style Selector="^ /template/ Label#CheckGlyph">
        <Setter Property="Opacity" Value="1" />
      </Style>
    </Style>

    <!--  Unchecked Disabled state  -->
    <Style Selector="^:disabled">
      <Style Selector="^ /template/ Border#NormalRectangle">
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHoverBackground}" />
      </Style>
    </Style>

    <Style Selector="^:checked">
      <!--  Checked Normal State  -->
      <Style Selector="^ /template/ Border#NormalRectangle">
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}" />
        <Setter Property="Background" Value="{DynamicResource ActiveGradient}" />
      </Style>

      <Style Selector="^ /template/ Label#CheckGlyph">
        <Setter Property="Opacity" Value="1" />
      </Style>

      <!--  Checked PointerOver State  -->
      <Style Selector="^:pointerover">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="BorderBrush" Value="{DynamicResource HoverGradient}" />
          <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
        </Style>
      </Style>

      <!--  Checked Pressed State  -->
      <Style Selector="^:pressed">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
        </Style>

        <Style Selector="^ /template/ Label#CheckGlyph">
          <Setter Property="Opacity" Value="0" />
        </Style>
      </Style>

      <!--  Checked Disabled State  -->
      <Style Selector="^:disabled">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHoverBackground}" />
          <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
        </Style>
      </Style>
    </Style>

    <Style Selector="^:indeterminate">
      <!--  Indeterminate Normal State  -->
      <Style Selector="^ /template/ Border#NormalRectangle">
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
      </Style>

      <Style Selector="^ /template/ Label#CheckGlyph">
        <Setter Property="Content" Value="&#xe1ec;" />
        <Setter Property="Opacity" Value="1" />
      </Style>

      <!--  Indeterminate PointerOver State  -->
      <Style Selector="^:pointerover">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
          <Setter Property="BorderBrush" Value="{DynamicResource HoverGradient}" />
        </Style>
      </Style>

      <!--  Indeterminate Pressed State  -->
      <Style Selector="^:pressed">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
        </Style>
      </Style>

      <!--  Indeterminate Disabled State  -->
      <Style Selector="^:disabled">
        <Style Selector="^ /template/ Border#NormalRectangle">
          <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHoverBackground}" />
          <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
        </Style>
      </Style>
    </Style>

    <!--  Disabled text  -->
    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverBackground}" />
    </Style>

    <!--  Three state checkbox pressed states  -->
    <Style Selector="^[IsThreeState=True]:pressed">
      <Style Selector="^:indeterminate /template/ Label#CheckGlyph">
        <Setter Property="Opacity" Value="0" />
      </Style>
      <Style Selector="^:checked /template/ Label#CheckGlyph">
        <Setter Property="Content" Value="&#xe1ec;" />
        <Setter Property="Opacity" Value="1" />
      </Style>
      <Style Selector="^:unchecked /template/ Label#CheckGlyph">
        <Setter Property="Content" Value="&#xeba6;" />
      </Style>
    </Style>

  </ControlTheme>
</ResourceDictionary>